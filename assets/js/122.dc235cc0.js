(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{321:function(s,e,t){"use strict";t.r(e);var n=t(0),a=Object(n.a)({},function(){var s=this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"linux命令ps-aux-grep-xxx详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux命令ps-aux-grep-xxx详解","aria-hidden":"true"}},[s._v("#")]),s._v(" linux命令ps aux|grep xxx详解")]),s._v(" "),t("ul",[t("li",[s._v("对进程进行监测和控制,首先必须要了解当前进程的情况,也就是需要查看当前进程, 而"),t("code",[s._v("ps命令（Process Status）")]),s._v("就是最基本同时也是非常强大的进程查看命令.")])]),s._v(" "),t("p",[s._v("使用该命令 可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵尸、哪些进程占用了过多的资源等等.总之大部分信息都是可以通过执行该命令得到的.")]),s._v(" "),t("p",[s._v("ps 为我们提供了进程的一次性的查看，它所提供的查看结果并不动态连续的；如果想对进程时间监控，应该用 top 工具。")]),s._v(" "),t("p",[s._v("如果直接用ps命令，会显示所有进程的状态，通常结合grep命令查看某进程的状态。")]),s._v(" "),t("p",[s._v("grep （global search regular expression(RE) and print out the line,全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。")]),s._v(" "),t("p",[s._v("使用示例：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node20 updateDB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps aux|grep ./update_stock")]),s._v("\n\nroot "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14232")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5928")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("724")]),s._v(" pts/1 S+ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":16 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":00 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" ./update_stock\n\nroot "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25021")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3056")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("816")]),s._v(" ? S Apr12 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":03 ./update_stock\n")])])]),t("p",[s._v("ps aux输出格式：\nuser    13641  0.0  0.1 955408 26632 ?        Ssl  Oct28   0:00 node app.olivying_server.js\nuser    18279  0.0  0.0 105524  1104 pts/1    S+   16:13   0:00 grep --color app.olivying_server.js\nUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND\n格式说明：")]),s._v(" "),t("p",[s._v("USER: 行程拥有者")]),s._v(" "),t("p",[s._v("PID: pid")]),s._v(" "),t("p",[s._v("%CPU: 占用的 CPU 使用率")]),s._v(" "),t("p",[s._v("%MEM: 占用的记忆体使用率")]),s._v(" "),t("p",[s._v("VSZ: 占用的虚拟记忆体大小")]),s._v(" "),t("p",[s._v("RSS: 占用的记忆体大小")]),s._v(" "),t("p",[s._v("TTY: 终端的次要装置号码 (minor device number of tty)")]),s._v(" "),t("p",[s._v("STAT: 该行程的状态，linux的进程有5种状态：")]),s._v(" "),t("p",[s._v("D 不可中断 uninterruptible sleep (usually IO)")]),s._v(" "),t("p",[s._v("R 运行 runnable (on run queue)")]),s._v(" "),t("p",[s._v("S 中断 sleeping")]),s._v(" "),t("p",[s._v("T 停止 traced or stopped")]),s._v(" "),t("p",[s._v("Z 僵死 a defunct (”zombie”) process")]),s._v(" "),t("p",[s._v("注: 其它状态还包括W(无驻留页), <(高优先级进程), N(低优先级进程), L(内存锁页).")]),s._v(" "),t("p",[s._v("START: 行程开始时间")]),s._v(" "),t("p",[s._v("TIME: 执行的时间")]),s._v(" "),t("p",[s._v("COMMAND:所执行的指令")])])}],!1,null,null,null);e.default=a.exports}}]);