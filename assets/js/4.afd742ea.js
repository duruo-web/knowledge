(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{167:function(t,e,i){t.exports=i.p+"assets/img/step1.64d5137d.png"},191:function(t,e,i){"use strict";i.r(e);var s=[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"管理git生成的多个ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理git生成的多个ssh-key","aria-hidden":"true"}},[this._v("#")]),this._v(" 管理git生成的多个ssh key")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"问题阐述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题阐述","aria-hidden":"true"}},[this._v("#")]),this._v(" 问题阐述")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("当有多个git账号的时候，比如一个github，用于自己进行一些开发活动，再来一个gitlab，一般是公司内部的git。这两者你的邮箱如果不同的话，就会涉及到一个问题，生成第二个git的key的时候会覆盖第一个的key，导致必然有一个用不了。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"问题解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题解决","aria-hidden":"true"}},[this._v("#")]),this._v(" 问题解决")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("我们可以在~/.ssh目录下新建一个config文件配置一下，就可以解决问题")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"具体步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#具体步骤","aria-hidden":"true"}},[this._v("#")]),this._v(" 具体步骤")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("生成第一个ssh key(这里我用于github，用的gmail邮箱)")]),t._v(" "),s("pre",[s("code",[t._v('  ssh-keygen -t rsa -C "yourmail@gmail.com"\n')])]),t._v(" "),s("p",[t._v("这里不要一路回传，让你选择在哪里选择存放key的时候写个名字，比如 id_rsa_github，之后的两个可以回车。\n完成之后我们可以看到~/.ssh目录下多了两个文件\n~/.ssh目录下的文件")]),t._v(" "),s("p",[s("img",{attrs:{src:i(167),alt:"step1"}})])]),t._v(" "),s("li",[s("p",[t._v("生成第二个ssh key（这里我用于gitlab，用的是公司邮箱）")]),t._v(" "),s("pre",[s("code",[t._v('  ssh-keygen -t rsa -C "yourmail@gmail.com"\n')])]),t._v(" "),s("p",[t._v("还是一样不要一路回车，在第一个对话的时候继续写个名字，比如 id_rsa_gitlab,之后的两个可以回车。")]),t._v(" "),s("p",[t._v("完成之后我们可以看到如2中图所标记，一样出现两个文件。（一个公钥一个私钥）")])]),t._v(" "),s("li",[s("p",[t._v("打开ssh-agent")]),t._v(" "),s("p",[t._v("这里如果你用的github官方的bash，ssh-agent -s,如果是其他的，比如msysgit,eval $(ssh-agent -s)")])]),t._v(" "),s("li",[s("p",[t._v("添加私钥")]),t._v(" "),s("pre",[s("code",[t._v("  ssh-add ~/.ssh/id_rsa_github\n  ssh-add ~/.ssh/id_rsa_gitlab\n")])])]),t._v(" "),s("li",[s("p",[t._v("创建并修改config文件")]),t._v(" "),s("p",[t._v("在windows下新建一个txt文本，然后将名字后缀一起改成config即可")]),t._v(" "),s("p",[t._v("在bash下的话直接touch config 即可。")]),t._v(" "),s("p",[t._v("添加一下内容")]),t._v(" "),s("pre",[s("code",[t._v("  # gitlab\n  Host git.iboxpay.com\n      HostName git.iboxpay.com  //这里填你们公司的git网址即可\n      PreferredAuthentications publickey\n      IdentityFile ~/.ssh/id_rsa_gitlab\n      User zhangjun\n\n  # github\n  Host github.com\n      HostName github.com\n      PreferredAuthentications publickey\n      IdentityFile ~/.ssh/id_rsa_github\n      User ZJsnowman\n")])])]),t._v(" "),s("li",[s("p",[t._v("在github和gitlab上添加公钥即可，这里不再多说。")])]),t._v(" "),s("li",[s("p",[t._v("测试")]),t._v(" "),s("p",[t._v("ssh -T git@github.com")]),t._v(" "),s("p",[t._v("分别测试githab和gitlub")]),t._v(" "),s("p",[t._v("PS:如果到这里你没有成功的话，别急，教你解决问题的终极办法--debug")]),t._v(" "),s("p",[t._v("比如测试github，ssh -vT git@github.com")]),t._v(" "),s("p",[t._v("-v 是输出编译信息，然后根据编译信息自己去解决问题吧。就我自己来说一般是config里的host那块写错了。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"补充一下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#补充一下","aria-hidden":"true"}},[this._v("#")]),this._v(" 补充一下")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("git config --global --unset user.name\ngit config --global --unset user.email\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"设置远程git的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置远程git的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 设置远程git的方法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("auth 杜若")])])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[i("p",[t._v("查看自己的用户名和邮箱地址：")]),t._v(" "),i("pre",[i("code",[t._v("  $ git config user.name\n  $ git config user.email\n")])])]),t._v(" "),i("li",[i("p",[t._v("(全局)修改自己的用户名和邮箱地址：")]),t._v(" "),i("pre",[i("code",[t._v('  $ git config --global user.name "xxx"\n  $ git config --global user.email "xxx"\n')])])]),t._v(" "),i("li",[i("p",[t._v("(局部)修改自己的用户名和邮箱地址")]),t._v(" "),i("pre",[i("code",[t._v('  $ git config user.name “gitlab’s Name”\n  $ git config user.email "gitlab@xx.com"\n  $ git config --list\n')])])]),t._v(" "),i("li",[i("p",[t._v("查看配置信息")]),t._v(" "),i("pre",[i("code",[t._v("  $ git config list\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git本地链接远程仓库的方法（ps：写过代码之后再提交到远程仓库）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git本地链接远程仓库的方法（ps：写过代码之后再提交到远程仓库）","aria-hidden":"true"}},[this._v("#")]),this._v(" git本地链接远程仓库的方法（ps：写过代码之后再提交到远程仓库）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("先在本地 $ git init，之后")]),this._v(" "),e("pre",[e("code",[this._v("  $ git remote add origin git@github.com:han1202012/TabHost_Test.git(你的git仓库地址)\n  $ git remote set-url origin git@git.tian.com:tyc-fe/egg.git (两个都行)\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("p",[this._v("列显已有的标签")]),this._v(" "),e("pre",[e("code",[this._v(" $ git tag\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("只对1.4.2系列的版本感兴趣")]),this._v(" "),e("pre",[e("code",[this._v("  $ git tag -l 'v1.4.2.*'\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[e("p",[this._v("新建标签")]),this._v(" "),e("pre",[e("code",[this._v(" $ git tag -a v1.4 (-m 'my version 1.4')\n $ git tag\n v0.1\n v1.4\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("把-a换成-s属于签署标签")]),this._v(" "),e("li",[this._v("可以使用 git show 命令查看相应标签的版本信息，并连同显示打标签时的提交对象。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("验证标签")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("可以使用 git tag -v [tag-name] （译注：取 verify 的首字母）的方式验证已经签署的标签。此命令会调用 GPG 来验证签名，所以你需要有签署者的公钥，存放在 keyring 中，才能验证")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("验证标签")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("后期加注标签")]),this._v(" "),e("pre",[e("code",[this._v("  $ git log --pretty=oneline // 展示提交历史\n  $ git tag -a v0.1 9fceb02  // 对应提交对象的校验和（或前几位字符）\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"5"}},[e("li",[this._v("分享标签（把tag标签提交给远程）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("默认情况下，git push 并不会把标签传送到远端服务器上，只有通过显式命令才能分享标签到远端仓库。其命令格式如同推送分支，运行 git push origin [tagname] 即可：")]),this._v(" "),e("pre",[e("code",[this._v("  $ git push origin v1.5\n  git push --tags   //如果要一次推送所有本地新增的标签上去，可以使用 --tags 选项\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"6"}},[e("li",[e("p",[this._v("删除远程tag")]),this._v(" "),e("pre",[e("code",[this._v(" $ git push origin --delete tag <tagname>\n $ git tag -d 20181127  删除本地tag\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("p",[this._v("想切换分支，并且不想提交正在进行的工作，所有需要储藏这些变更")]),this._v(" "),e("pre",[e("code",[this._v(" $ git status //(自己变动的目录)\n $ git stash\n $ git status  // 目录清理干净\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("这时，你可以方便地切换到其他分支工作；你的变更都保存在栈上。要查看现有的储藏，你可以使用 git stash list：")]),this._v(" "),e("pre",[e("code",[this._v("  $ git stash list  // 自己储藏的列表\n  $ git stash apply // 最新实施的储藏，为默认\n  $ git stash apply stash@{2}  // 指明哪个\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[e("p",[this._v("从储藏中创建分支")]),this._v(" "),e("pre",[e("code",[this._v(" $ git stash branch dev   // 相当于把master分支提交到了新创建的dev分支\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("由于误操作或者其他原因，commit丢失了，不要谎，我们在Git上做的任何操作都只是在原来之前的操作上做修改，并且会被记录下来保存，也就是说无论你做了什么，对于Git来说都可以进行回滚操作。")]),this._v(" "),e("pre",[e("code",[this._v("  git reflog\n  git reset --hard 88888 // 版本号\n  git log // 已恢复\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-reset-的具体用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-的具体用法","aria-hidden":"true"}},[this._v("#")]),this._v(" git reset 的具体用法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("git reset [--hard|soft|mixed|merge|keep] [<commit>或HEAD]")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("作用：将当前分支reset到指定的<commit>或者HEAD(默认为最新的一次提交，即重设到最新一次提交之前的版本)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("hard(慎用)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("重设index和working tree,所有改变都会被丢弃，包括文件的修改、新增、删除等操作，并把HEAD指向<commit>，\n因此通过git log查看版本提交记录，被reset的版本记录会被丢弃，但可以通过git reflog查看")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("soft")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("不重设index和working tree,仅仅将HEAD指向<commit>,表示已经commit的文件会取消commit,\n通过git status查看，文件会处于待commit状态“Changes to be committed”")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("mixed(默认)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("重设index,但不重设working tree,表示已经被add的文件，被取消add，\n通过git status查看，文件会处于待添加索引状态 “Changes not staged for commit”")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("merge")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("重设index，重设working tree中发生变化的文件，但是保留index和working tree不一致的文件")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"5"}},[e("li",[this._v("keep")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("重设index，重设working tree中发生变化的文件")]),this._v(" "),e("pre",[e("code",[this._v("  git merge master  // 将当前分支和最新的master代码合并\n  git push origin seo -f // 强制覆盖\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"记录的保存问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#记录的保存问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 记录的保存问题###")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v('    $ git config gc.pruneexpire "30 days"\n')])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("    $ git config gc.auto 0\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"删除github中某个文件夹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除github中某个文件夹","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除github中某个文件夹")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("在github上只能删除仓库,却无法删除文件夹或文件, 所以只能通过命令来解决")])]),this._v(" "),e("li",[e("p",[this._v("首先进入你的master文件夹下, Git Bash Here ,打开命令窗口")]),this._v(" "),e("pre",[e("code",[this._v("  $ git --help 帮助命令\n  $ git pull origin master 将远程仓库里面的项目拉下来\n  $ dir  查看有哪些文件夹\n  $ git rm -r --cached target  删除target文件夹\n  $ git commit -m '删除了target'  提交,添加操作说明\n  $ git push -u origin master 将本次更改更新到github项目上去\n")])]),this._v(" "),e("p",[this._v("注:本地项目中的target文件夹不收操作影响,删除的只是远程仓库中的target, 可放心删除\n每次增加文件或删除文件，都要commit 然后直接 git push -u origin master，就可以同步到github上了")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"save和-save-dev的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#save和-save-dev的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" --save和--save-dev的区别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("--save-dev 是你开发时候依赖的东西，")])]),this._v(" "),e("li",[e("p",[this._v("--save 是你发布之后还依赖的东西。")]),this._v(" "),e("p",[this._v("比如，你写 ES6 代码，如果你想编译成 ES5 发布那么 babel 就是devDependencies。\n如果你用了 jQuery，由于发布之后还是依赖jQuery，所以是dependencies。\n但是在 npm 里面除了二进制的依赖，似乎也不用区分是不是dev。\n因为使用npm就是自己编译的意思，而不使用npm直接拿编译后的版本的，这些依赖项也看不到。")])])])}],r=i(0),n=Object(r.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),i("blockquote",[i("p",[i("a",{attrs:{href:"https://www.jianshu.com/p/f7f4142a1556",target:"_blank",rel:"noopener noreferrer"}},[t._v("来自简书"),i("OutboundLink")],1)])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),i("p",[t._v("如果之前有设置全局用户名和邮箱的话，需要unset一下")]),t._v(" "),t._m(8),t._v(" "),i("p",[t._v('然后在不同的仓库下设置局部的用户名和邮箱\n比如在公司的repository下git config user.name "yourname" git config user.email "youremail" 在自己的github的仓库在执行刚刚的命令一遍即可。\n这样就可以在不同的仓库，已不同的账号登录。')]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),i("h2",{attrs:{id:"tag问题，git-基础-打标签"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#tag问题，git-基础-打标签","aria-hidden":"true"}},[t._v("#")]),t._v(" tag问题，"),i("a",{attrs:{href:"https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 基础 - 打标签"),i("OutboundLink")],1)]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),i("h2",{attrs:{id:"git-工具-储藏（stashing）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-工具-储藏（stashing）","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("a",{attrs:{href:"https://git-scm.com/book/zh/v1/Git-%E5%B7%A5%E5%85%B7-%E5%82%A8%E8%97%8F%EF%BC%88Stashing%EF%BC%89",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 工具 - 储藏（Stashing）"),i("OutboundLink")],1)]),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),i("h2",{attrs:{id:"找回丢失的commit-参考找回git中丢失的commit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#找回丢失的commit-参考找回git中丢失的commit","aria-hidden":"true"}},[t._v("#")]),t._v(" 找回丢失的commit 参考"),i("a",{attrs:{href:"https://www.jianshu.com/p/8b4c95677ee0",target:"_blank",rel:"noopener noreferrer"}},[t._v("找回Git中丢失的Commit"),i("OutboundLink")],1)]),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),i("p",[t._v("index，执行git add的操作，会对文件创建索引，所有被跟踪的文件索引会放入index，表示文件被修改待提交\nworking tree，当前工作区，被修改但未被add的文件，存储在工作区\nORIG_HEAD,用于指向前一个操作状态,每次的commit或者pull或者reset，git 都会把老的HEAD拷贝到.git/ORIG_HEAD，通过对ORIG_HEAD的引用可以指向前一次的操作状态")]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),i("p",[t._v("我们前面说到在Git上做的所有操作都被保存到记录里，一般是从你本地Git库执行clone开始的所有操作都保存了下来，所以不用担心很久之前的一些Commit log找不到，你或许期望去为已删除的提交设置一个更长的保存周期。例如：")]),t._v(" "),t._m(43),t._v(" "),i("p",[t._v("意思是一个被删除的提交会在删除30天后，且运行 git gc 以后，被永久丢弃。\n你或许还想关掉 git gc 的自动运行：")]),t._v(" "),t._m(44),t._v(" "),i("p",[t._v("在这种情况下提交将只在你手工运行 git gc 的情况下才永久删除。")]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),i("h2",{attrs:{id:"githug通关流程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#githug通关流程","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("a",{attrs:{href:"https://www.jianshu.com/p/482b32716bbe",target:"_blank",rel:"noopener noreferrer"}},[t._v("githug通关流程"),i("OutboundLink")],1)]),t._v(" "),t._m(47),t._v(" "),t._m(48)])},s,!1,null,null,null);e.default=n.exports}}]);