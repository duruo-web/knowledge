(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{168:function(e,t,n){e.exports=n.p+"assets/img/array.ae37d27d.png"},186:function(e,t,n){"use strict";n.r(t);var a=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Date.UTC()  //方法接受的参数同日期构造函数接受最多参数时一样，返回从1970-1-1 00:00:00 UTC到指定日期的的毫秒数。")])]),e._v(" "),n("li",[n("p",[e._v("Date.now()  // 方法返回自1970年1月1日 00:00:00 UTC到当前时间的毫秒数。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getDate() // 根据本地时间，返回一个指定的日期对象为一个月中的哪一日（从1--31）。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getDay() // 根据本地时间，返回一个具体日期中一周的第几天，0 表示星期天。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getFullYear() // 根据本地时间，返回指定日期的年份。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getHours() // 根据本地时间，返回一个指定的日期对象的小时。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getMinutes() // 根据本地时间，返回一个指定的日期对象的分钟数。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getMonth() // 根据本地时间，返回一个指定的日期对象的月份，为基于0的值（0表示一年中的第一月）。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getSeconds() // 根据本地时间，返回一个指定的日期对象的秒数。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getTime() // 方法返回一个时间的格林威治时间数值。你可以使用这个方法把一个日期时间赋值给另一个Date 对象。这个方法的功能和 valueOf() 方法一样。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getUTCDate() // 方法以世界时为标准，返回一个指定的日期对象为一个月中的第几天")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getUTCDay() // 方法以世界时为标准，返回一个指定的日期对象为一星期中的第几天，其中 0 代表星期天。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getUTCFullYear() // 以世界时为标准，返回一个指定的日期对象的年份。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().getUTCHours() 方法以世界时为标准，返回一个指定的日期对象的小时数。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().setDate() // 方法根据本地时间来指定一个日期对象的天数。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().setFullYear() // 方法根据本地时间为一个日期对象设置年份。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().setTime() // 方法以一个表示从1970-1-1 00:00:00 UTC计时的毫秒数为来为 Date 对象设置时间。")])]),e._v(" "),n("li",[n("p",[e._v("new Date().valueOf() // 方法返回一个 Date 对象的原始值。  与Date.prototype.getTime() 方法一样。")]),e._v(" "),n("pre",[n("code",[e._v("  function checkTime(i) {\n      if(i < 10)i = '0' + i;\n      return i;\n  }\n")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("p",[this._v("获取当前日期")]),this._v(" "),t("pre",[t("code",[this._v(" function getNewDate() {\n     var date = new Date();\n     var year = date.getFullYear();\n     var month = date.getMonth() + 1;\n     var day = date.getDate();\n     var hour = date.getHours();\n     var minute = date.getMinutes();\n     var second = date.getSeconds();\n     month = checkTime(month);\n     day = checkTime(day);\n     hour = checkTime(hour);\n     minute = checkTime(minute);\n     second = checkTime(second);\n     return (year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second)\n }\n")])])]),this._v(" "),t("li",[t("p",[this._v("实现倒计时")]),this._v(" "),t("pre",[t("code",[this._v("     var futureTime = new Date().setDate(20190313);\n     function remainingTime(futureTime) {\n         var leftTime = (new Date(futureTime)) - (Date.now()); //计算剩余的毫秒数\n         var days = parseInt(leftTime / 1000 / 60 / 60 / 24, 10); //计算剩余的天数\n         var hours = parseInt(leftTime / 1000 / 60 / 60 % 24, 10); //计算剩余的小时\n         var minutes = parseInt(leftTime / 1000 / 60 % 60, 10);//计算剩余的分钟\n         var seconds = parseInt(leftTime / 1000 % 60, 10);//计算剩余的秒数\n         days = checkTime(days);\n         hours = checkTime(hours);\n         minutes = checkTime(minutes);\n         seconds = checkTime(seconds);\n         if (leftTime > 0) {\n         setTimeout(function () {\n           remainingTime();\n         }, 1000);\n         $(\"#remainingTime\").html(year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second);\n         } else {\n\n         }\n     }\n")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ol",[n("li",[n("p",[e._v("得到一个两数之间的随机数\nfunction getRandomArbitrary(min, max) {\nMath.random() * (max-min) + min\n}")])]),e._v(" "),n("li",[n("p",[e._v("返回数字的整数部分")]),e._v(" "),n("pre",[n("code",[e._v(" function toInteger(num) {\n     return num < 0 ? Math.ceil(num) : Math.floor(num);\n }\n")])])]),e._v(" "),n("li",[n("p",[e._v("得到一个两数之间的随机整数")]),e._v(" "),n("pre",[n("code",[e._v(" function getRandomInt(min, max) {\n   min = Math.ceil(min);\n   max = Math.floor(max);\n   return Math.floor(Math.random() * (max - min)) + min; //不含最大值，含最小值\n }\n")])])]),e._v(" "),n("li",[n("p",[e._v("得到一个两数之间的随机整数，包括两个数在内")]),e._v(" "),n("pre",[n("code",[e._v(" function getRandomIntInclusive(min, max) {\n   min = Math.ceil(min);\n   max = Math.floor(max);\n   return Math.floor(Math.random() * (max - min + 1)) + min; //含最大值，含最小值\n }\n")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"array"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#array","aria-hidden":"true"}},[this._v("#")]),this._v(" Array")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:n(168),alt:"数组"}})])}],r=n(0),i=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("h3",{attrs:{id:"date"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#date","aria-hidden":"true"}},[e._v("#")]),e._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date",target:"_blank",rel:"noopener noreferrer"}},[e._v("Date"),n("OutboundLink")],1)]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),n("h3",{attrs:{id:"math，是一个内置对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#math，是一个内置对象","aria-hidden":"true"}},[e._v("#")]),e._v(" "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math",target:"_blank",rel:"noopener noreferrer"}},[e._v("Math"),n("OutboundLink")],1),e._v("，是一个内置对象")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4)])},a,!1,null,null,null);t.default=i.exports}}]);